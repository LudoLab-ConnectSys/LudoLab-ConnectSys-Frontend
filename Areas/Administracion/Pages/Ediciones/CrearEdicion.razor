@page "/crear-edicion/{CursoId:int?}"
@inject NavigationManager NavigationManager

<h3>Crear Nueva Edición</h3>

<EditForm Model="nuevaEdicion" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="curso">Curso:</label>
        <InputSelect id="curso" class="form-control" @bind-Value="nuevaEdicion.CursoId" disabled="@cursoSeleccionado">
            <option value="">Selecciona un curso</option>
            @foreach (var curso in cursos)
            {
                <option value="@curso.Id">@curso.Nombre</option>
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="nombre">Nombre de la Edición:</label>
        <InputText id="nombre" class="form-control" @bind-Value="nuevaEdicion.Nombre" />
    </div>

    <div class="form-group">
        <label for="periodo">Periodo:</label>
        <InputText id="periodo" class="form-control" @bind-Value="nuevaEdicion.Periodo" />
    </div>

    <button type="submit" class="btn btn-success">Crear Edición</button>
</EditForm>

@if (edicionCreada)
{
    <p class="text-success">Edición creada con éxito!</p>
}

@code {
    [Parameter]
    public int? CursoId { get; set; }

    private Edicion nuevaEdicion = new Edicion();
    private bool edicionCreada = false;
    private bool cursoSeleccionado = false;
    private List<Curso> cursos = new List<Curso>();

    protected override void OnInitialized()
    {
        cursos = ObtenerTodosLosCursos();

        if (CursoId.HasValue)
        {
            nuevaEdicion.CursoId = CursoId.Value;
            cursoSeleccionado = true;
        }
    }

    private void HandleValidSubmit()
    {
        // Aquí agregarías la nueva edición a tu base de datos o lista
        // Simularemos la adición a la lista de ediciones existente
        // Además, puedes agregar lógica para redirigir al usuario o mostrar un mensaje
        nuevaEdicion.Id = ObtenerNuevoId();
        AgregarNuevaEdicion(nuevaEdicion);
        edicionCreada = true;
        nuevaEdicion = new Edicion(); // Reiniciar el formulario

        if (cursoSeleccionado)
        {
            NavigationManager.NavigateTo($"/ediciones-del-curso/{CursoId}");
        }
        else
        {
            NavigationManager.NavigateTo("/ediciones");
        }
    }

    public class Edicion
    {
        public int Id { get; set; }
        public int CursoId { get; set; }
        public string Nombre { get; set; }
        public string Periodo { get; set; }
    }

    public class Curso
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public string Descripcion { get; set; }
    }

    private List<Curso> ObtenerTodosLosCursos()
    {
        // Simulación de datos de cursos
        return new List<Curso>
        {
            new Curso { Id = 1, Nombre = "Blazor para Principiantes", Descripcion = "Introducción a Blazor" },
            new Curso { Id = 2, Nombre = "Blazor Avanzado", Descripcion = "Profundizando en Blazor" }
        };
    }

    private int ObtenerNuevoId()
    {
        // Genera un nuevo ID para la edición
        return new Random().Next(1000, 9999); // Simulación de ID
    }

    private void AgregarNuevaEdicion(Edicion edicion)
    {
        // Aquí agregarías la lógica para agregar la edición a la base de datos o lista
        Console.WriteLine($"Edición creada: {edicion.Nombre} para el curso {edicion.CursoId}");
    }
}
