@page "/periodos"
@layout AdminLayout
@attribute [Authorize(Roles = "Administrador")]
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Periodos</h3>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombre del Periodo</th>
            <th>Fecha de Inicio</th>
            <th>Fecha de Fin</th>
            <th>Horas</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var periodo in periodos)
        {
            <tr>
                <td>@periodo.id_periodo</td>
                <td>@periodo.nombre_periodo</td>
                <td>@periodo.fecha_inicio_periodo</td>
                <td>@periodo.fecha_fin_periodo</td>
                <td>@periodo.duracion_periodo_horas</td>
                <td>
                    <button class="btn btn-info" @onclick="() => VerCursos(periodo.id_periodo)">Ver Cursos</button>
                    <button class="btn btn-primary" @onclick="() => EditarPeriodo(periodo.id_periodo)">Editar</button>
                    <button class="btn btn-danger" @onclick="() => EliminarPeriodo(periodo.id_periodo)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (!periodos.Any())
{
    <p>No hay periodos disponibles.</p>
}

@code {
    private List<PeriodoConNombre> periodos = new List<PeriodoConNombre>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            periodos = await Http.GetFromJsonAsync<List<PeriodoConNombre>>("http://localhost:5117/api/Periodo/all-periodos-con-nombre");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }

    private void VerCursos(int id_periodo)
    {
        NavigationManager.NavigateTo($"/periodos/{id_periodo}/cursos");
    }

    private void EditarPeriodo(int id_periodo)
    {
        NavigationManager.NavigateTo($"/editar-periodo/{id_periodo}");
    }

    private async Task EliminarPeriodo(int id_periodo)
    {
        var response = await Http.DeleteAsync($"http://localhost:5117/api/Periodo/{id_periodo}");
        if (response.IsSuccessStatusCode)
        {
            periodos.RemoveAll(p => p.id_periodo == id_periodo);
        }
    }
}
