@page "/cursos-inscritos"
@layout EstudianteLayout
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime Js
@inject SweetAlertService Swal

<h3>Mis Cursos Inscritos</h3>

@if (cursosInscritos != null && cursosInscritos.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre del Curso</th>
                <th>Periodo</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var curso in cursosInscritos)
            {
                <tr>
                    <td>@curso.nombre_curso</td>
                    <td>@curso.nombre_periodo</td>
                    <td>
                        <button class="btn btn-info" @onclick="() => VerDetalleCurso(curso.id_curso)">Ver Detalle</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No tienes cursos inscritos actualmente.</p>
}

@code {
    private List<CursoInscritoEstudiante> cursosInscritos = new List<CursoInscritoEstudiante>();
    private int idEstudiante;

    protected override async Task OnInitializedAsync()
    {
        await CargarCursosInscritos();
    }

    private async Task CargarCursosInscritos()
    {
        try
        {
            var idEstudianteString = await Js.InvokeAsync<string>("localStorage.getItem", "IdEstudiante");
            Console.WriteLine($"IdEstudiante string from local storage: {idEstudianteString}");
            if (int.TryParse(idEstudianteString, out int estudianteId))
            {
                idEstudiante = estudianteId;
                cursosInscritos = await Http.GetFromJsonAsync<List<CursoInscritoEstudiante>>($"http://localhost:5117/api/Estudiante/CursosInscritos/{idEstudiante}");
            }
            else
            {
                await sweetAletNotify("Error al obtener el ID del estudiante", "error");
            }
        }
        catch (Exception ex)
        {
            await sweetAletNotify($"Error al cargar los cursos inscritos: {ex.Message}", "error");
        }
    }

    private void VerDetalleCurso(int idCurso)
    {
        // Navegar a la página de detalles del curso
        Navigation.NavigateTo($"/detalle-curso/{idCurso}");
    }

    private async Task sweetAletNotify(string texto, string tipo)
    {
        var options = new
        {
            Title = texto,
            Icon = tipo,
            ConfirmButtonText = "OK"
        };
        await Js.InvokeVoidAsync("FireSweetAlert", options);
    }
}
