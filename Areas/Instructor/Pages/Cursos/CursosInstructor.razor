@page "/grupos-del-instructor"
@layout InstructorLayout
@inject HttpClient Http
@inject IJSRuntime Js
@inject NavigationManager Navigation

<h3>Grupos Asignados al Instructor</h3>

@if (gruposDelInstructor == null)
{
    <p>Cargando grupos...</p>
}
else if (gruposDelInstructor.Count == 0)
{
    <p>No hay grupos asignados.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre del Grupo</th>
                <th>Periodo</th>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
                <th>Curso</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var grupo in gruposDelInstructor)
            {
                <tr>
                    <td>@grupo.nombre_grupo</td>
                    <td>@grupo.nombre_periodo</td>
                    <td>@grupo.fecha_inicio_periodo</td>
                    <td>@grupo.fecha_fin_periodo</td>
                    <td>@grupo.nombre_curso</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => VerDetallesGrupo(grupo.id_grupo)">Ver Detalles</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<GrupoConCursoPeriodo> gruposDelInstructor;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var idInstructorString = await Js.InvokeAsync<string>("localStorage.getItem", "IdInstructor");
            if (int.TryParse(idInstructorString, out int idInstructor))
            {
                await CargarGrupos(idInstructor);
            }
            else
            {
                Console.WriteLine("No se pudo obtener el ID del instructor");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al obtener el ID del instructor del local storage: {ex.Message}");
        }
    }

    private async Task CargarGrupos(int instructorId)
    {
        gruposDelInstructor = await Http.GetFromJsonAsync<List<GrupoConCursoPeriodo>>($"http://localhost:5117/api/Grupo/GruposDelInstructor/{instructorId}");
    }

    private void VerDetallesGrupo(int grupoId)
    {
        Navigation.NavigateTo($"/detalles-grupo/{grupoId}");
    }    
    
}